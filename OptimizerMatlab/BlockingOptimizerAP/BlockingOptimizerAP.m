function [divisionPercentageED, divisionPercentageEquivalentAP, transmitSpeedEquivalentAP] = ...
    BlockingOptimizerAP(...
    nAP,...
    compressionRatio,...
    totalTransmitResourceCC,...
    generateSpeedEquivalentAP,...
    totalComputeResourceAP,...
    childStartIdx,...
    nChilds,...
    generateSpeedAP,...
    transmitSpeedED,....
    generateSpeedED,...
    computeCapacityED...
    )
% When optimize AP layer
% We should we k alpha to update divisionPercentageEquivalentAP
% and then use generateSpeed


alpha = GetAlphaAP(...
    nAP,...
    compressionRatio,...
    totalTransmitResourceCC,...
    generateSpeedEquivalentAP,...
    totalComputeResourceAP,...
    childStartIdx,...
    nChilds,...
    generateSpeedAP,...
    transmitSpeedED,...
    generateSpeedED,...
    computeCapacityED);

divisionPercentageED = ComputeDivisionPercentageED(alpha, computeCapacityED, generateSpeedED);
[generateSpeedEquivalentAP,...
    ~,...
    betaSum,...
    ~,...
    ~,...
    ~,...
    ~]...
    = InitApLayerParams(...
    nAP,...
    compressionRatio,...
    totalComputeResourceAP,...
    childStartIdx,...
    nChilds,...
    divisionPercentageED,... 
    transmitSpeedED ...
    );

kalpha = generateSpeedED(1) / computeCapacityED(1) * alpha;
divisionPercentageEquivalentAP = ...
    ComputeDivisionPercentageEquivalentAP(...
    kalpha, ...
    generateSpeedEquivalentAP, ...
    totalComputeResourceAP...
    );

transmitSpeedEquivalentAP = ...
    generateSpeedEquivalentAP .* (1 + (compressionRatio - 1) * divisionPercentageEquivalentAP)...
    + betaSum;

end